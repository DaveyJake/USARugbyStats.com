<?php
$form = $this->matchCreateForm;
$form->prepare();
$fieldset = $form->get('match');
?>

<div class="well" style="margin: 20px">
    <div id="AsyncMatchAddSpinner" class="alert alert-info" style="display:none"><i class="glyphicon glyphicon-refresh"></i> Sending your request.  Please wait...</div>
    <div id="AsyncMatchAddForm" class="form-inline">
        <div class="form-group" style="vertical-align:top">
            <?php $element = $fieldset->get('date'); ?>
            <?php $element->setLabelAttributes(array('class' => 'control-label', 'style' => 'display:inline !important')); ?>
            <?php $element->setAttribute('class', 'form-control'); ?>

            <?php echo $this->formLabel($element) ?><br />
            <?php echo $this->formElement($element) ?>
            <span class="help-block error-message" style="display:none"></span>
            <script type="text/javascript">
                $(function () {
                    $('input[name=match\\[date\\]]').datetimepicker({
                        format: 'YYYY-MM-DDTHH:mmZ'
                    });
                });
            </script>
        </div>
        <div class="form-group" style="vertical-align:top">
            <?php $element = $fieldset->get('location'); ?>
            <?php $element->setLabelAttributes(array('class' => 'control-label', 'style' => 'display:inline !important')); ?>
            <?php $element->setAttribute('class', 'form-control'); ?>

            <?php echo $this->formLabel($element) ?><br />
            <?php echo $this->formElement($element) ?><br />

            <?php $element = $fieldset->get('locationDetails'); ?>
            <?php $element->setLabelAttributes(array('class' => 'control-label', 'style' => 'display:inline !important')); ?>
            <?php $element->setAttribute('class', 'form-control'); ?>
            <?php echo $this->formElement($element) ?>
            <span class="help-block error-message" style="display:none"></span>
        </div>
        <div class="form-group" style="vertical-align:top">
            <?php $element = $fieldset->get('teams')->get('H')->get('team'); ?>
            <?php $element->setLabel('Home Team'); ?>
            <?php $element->setLabelAttributes(array('class' => 'control-label', 'style' => 'display:inline !important')); ?>
            <?php $element->setAttribute('class', 'form-control'); ?>

            <?php echo $this->formLabel($element) ?><br />
            <?php echo $this->formElement($element) ?>
            <span class="help-block error-message" style="display:none"></span>
        </div>
        <div class="form-group" style="vertical-align:top">
            <?php $element = $fieldset->get('teams')->get('A')->get('team'); ?>
            <?php $element->setLabel('Away Team'); ?>
            <?php $element->setLabelAttributes(array('class' => 'control-label', 'style' => 'display:inline !important')); ?>
            <?php $element->setAttribute('class', 'form-control'); ?>

            <?php echo $this->formLabel($element) ?><br />
            <?php echo $this->formElement($element) ?>
            <span class="help-block error-message" style="display:none"></span>
        </div>
        <div class="form-group pull-right" style="margin-top: 21px">
            <button id="MatchQuickAdd" class="btn btn-primary">Add Match!</button>
        </div>
    </div>
<?php
$matchCreateUrl = $this->url('usarugbystats_competition-api_competition_match', ['cid' => $competition->getId()]);
$matchRenderUrl = $this->url('usarugbystats_frontend_competition_match/render-match-row', ['cid' => $competition->getId(), 'mid' => ':mid']);
$addMatchJavascript = <<<JSBLOCK
$('#MatchQuickAdd').click(function() {
    $('AsyncMatchAddSpinner').show();
    $('AsyncMatchAddForm').hide();

    var payload = {
        'match[date]': $('input[name=match\\\\[date\\\\]]').val(),
        'match[location]': $('select[name=match\\\\[location\\\\]]').val(),
        'match[locationDetails]': $('input[name=match\\\\[locationDetails\\\\]]').val(),
        'match[teams][H][team]': $('select[name=match\\\\[teams\\\\]\\\\[H\\\\]\\\\[team\\\\]]').val(),
        'match[teams][A][team]': $('select[name=match\\\\[teams\\\\]\\\\[A\\\\]\\\\[team\\\\]]').val(),
    };

    function addErrorMessage(field, messages) {
        if ( typeof messages == 'undefined' ) {
            return;
        }
        $(field).parent().addClass('has-error');
        var errContainer = $(field).parent().find('.error-message').text("");
        $.each(messages, function(k,v) {
            errContainer.append(v).show();
        });
    }

    $.ajax({
        type: "POST",
        url: "{$matchCreateUrl}",
        data: payload,
        dataType: "json"
    }).done(function(data) {
        console.log(data);

        $('input[name=match\\\\[date\\\\]]').val(null),
        $('select[name=match\\\\[location\\\\]]').val(null),
        $('input[name=match\\\\[locationDetails\\\\]]').val(null),
        $('select[name=match\\\\[teams\\\\]\\\\[H\\\\]\\\\[team\\\\]]').val(null),
        $('select[name=match\\\\[teams\\\\]\\\\[A\\\\]\\\\[team\\\\]]').val(null),

        $.ajax({
            type: "GET",
            url: "{$matchRenderUrl}".replace(':mid', data.data.match.id),
            data: {relativeToCompetition: '{$competition->getId()}'},
            dataType: "html"
        }).done(function(data) {
            $('#schedule tbody').append(data);
        }).always(function() {
            $('AsyncMatchAddSpinner').hide();
            $('AsyncMatchAddForm').show();
        });
    }).fail(function(xhr, status) {
        try { addErrorMessage('input[name=match\\\\[date\\\\]]', xhr.responseJSON.validation_messages.match.date); } catch (e) {};
        try { addErrorMessage('input[name=match\\\\[location\\\\]]', xhr.responseJSON.validation_messages.match.location); } catch (e) {};
        try { addErrorMessage('input[name=match\\\\[locationDetails\\\\]]', xhr.responseJSON.validation_messages.match.locationDetails); } catch (e) {};
        try { addErrorMessage('select[name=match\\\\[teams\\\\]\\\\[H\\\\]\\\\[team\\\\]]', xhr.responseJSON.validation_messages.match.teams.H.team); } catch (e) {};
        try { addErrorMessage('select[name=match\\\\[teams\\\\]\\\\[A\\\\]\\\\[team\\\\]]', xhr.responseJSON.validation_messages.match.teams.A.team); } catch (e) {};

        $('AsyncMatchAddSpinner').hide();
        $('AsyncMatchAddForm').show();
    });
});
JSBLOCK;
$this->inlineScript()->appendScript($addMatchJavascript);
?>


</div>